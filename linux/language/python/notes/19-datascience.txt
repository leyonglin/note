 

01： NumPy数组对象 NumPy内置数据类型 ndarray对象的属性

	Numpy     +  	Scipy           + Matplotlib +      Pandas
基础数值算法(数组)	科学计算(封装)   数据可视化    (时间)序列高级函数

Numerical Python，数据的Python，补充了Python语言所欠缺的数值计算能力
	核心：多维数组
	底层：厚内核(c)+薄接口(python)，保证性能
	数组对象
	1.用np.ndarray类的对象表示n维数组
			实际数据：数组中元素
			元数据：描述数组中的元素
将实际数据与元数据分开存放，一方面提高了内存空间的使用效率。一方面减少对实际数据的访问频率，提高性能
		2.Numpy数组是同质数组，即所有元素的数据类型必须相同
		3.Numpy数组的下标从0开始，最后一个元素的下标为数组长度减1
		4.np.ndarryay.dtype/shape/size:类型/维度/大小
		5.np.arange(起始值0，终止值，步长1) 
		6.元素索引
			数组对象[...,页号,行号,列号]
			数组对象.shape(...,页数,行数,列数)
			页/行/列号：[0,x数-1]
		7.布尔型：bool
		  整数型：有符号int8/int/16/int32/int64/ 无符号uint8/uint16/uint32/unit64
		  浮点型：float16/float32/float64
		  复数型：complex64/complex128
		  字串型：str_(32Unicode)
		8.自定义符合类型：用括号括起来，dtype=''
	2.np.array(任何可被解释为Numpy数组的逻辑结构)--会自动转换数据
	3.类型字符码：将数字当作字符串来看
	4.切片
	5.变维
		1.视图变维：元数据独立，实际数据共享
		2.复制变维：元数据和实际数据都是独立的
		3.就地变维：修改元数据的维度信息，不产生新得数组


02： 数据可视化 
	
	from matplotlib.pyplot as mp



03： numpy的通用函数 

	三维
	动画
	
	线性模型--线性预测--线性拟合
	曲线拟合（多项式拟合）
	符号数组--正数得到1，负数得到-1

04： 矩阵和通用函数 numpy的子模块
	
	算术平均值
	加权平均(成交量加权平均价格)
	中位数
	标准差

	完全卷积，同维卷积，有效卷积

05： numpy的通用函数





06： 断言和单元测试 基于pygal的数据可视化

	矩阵和通用函数



07： 基于scipy的科学计算 基于pygame的游戏与人工智能


（json是半数据结构，是自描述数据（描述和数据放在一起））
数据结构：当有几千几万个数据点时，每一个存放数据点的位置之间的排列关系就是数据结构
	通常情况下，精心选择的数据结构可以带来更高的运行或存储效率，数据结构往往同高效的检索算法有关
	pandas可信数据结构有两种：series一维数组和dataframe二维数组
	在人工智能的每节第三视频(人脸识别2，深度神经网络3，8)








