
限制语言能力的不是语言本身，而是语言的运行环境
	js运行在浏览器端的
		1.基本语法(变量,逻辑,运算)
		2.bom
		3.dom
		4.ajax
		5.不能操作服务端的数据(数据库/文件)
	node js运行在服务器端，事件驱动编程语言
		1.基本语法
		2.能操作服务器端的数据库和文件
nvm：node js版本控制工具 -- nvm ls
npm: node js包管理工具
commonjs:模块，包
REPL：命令行运行环境

静态页面(h5-css-js-jq) --> Ajax --> mvc框架 --> mvvm --> spa阶段(vue/angular/react..)
CSS 的理念就是让文档的结构和设计分离，达到解耦的目的。
动态 HTML技术是通过调用客户端脚本语言 JavaScript，实现对 HTML的 Web 页面的动态改造。
JavaScript 是一种轻量级的编程语言，由所有的现代浏览器执行
jQuery 解決不同浏览器对 JavaScript(共存) 的兼容性问题，并封装了大量的 API
利用 DOM（Document Object Model，文档对象模型）可指定欲发生动态变化的 HTML元素，DOM 内存在各种函数，DOM 是用以操作 HTML文档和 XML文档的 API（Application Programming Interface，应用编程接口）
使用 DOM 可以将 HTML内 的元素当作对象操作，如取出元素内的字符串、改变那个 CSS 的属 性等，使页面的设计发生改变。
	var content = document.getElementsByTagName('P'); 
	content[2].style.color = '#FF0000';
	#调用 getElementsByTagName 函数，从整个 HTML文档（document object）内取出 P 元素。接下来 的 content[2].style.color = '#FF0000' 语句指定 content 的索引为 2（第 3 个）的元素的样式颜色改为红色（#FF0000）
BOM：浏览器对象模型(Brower Object Model)，是用于操作浏览器而出现的API，提供了一个访问HTML页面的一入口——document对象，以使得我们可以通过这个入口来使用DOM的强大功能
#比如跳转到另一个页面、前进、后退等等，程序还可能需要获取屏幕的大小之类的参数。所以 BOM 就是为了解决这些事情出现的接口。比如我们要让浏览器跳转到另一个页面，只需要location.href = "http://www.xxxx.com";这个 location 就是 BOM 里的一个对象

	
xml比html能够让程序更容易读取到数据的数据结构
JavaScript 衍生的轻量级易用 JSON

vue：用于构建用户界面的渐进式框架


unity：开发游戏工具(感觉像是三维动画攻击，结合c#(开发游戏语言))



#########################################################################################

2012年：https://www.bilibili.com/video/BV1LW411Q7qV?p=20

1.创建一个入口函数(只能一个)  2.取出元素  3.创建事件(函数)
入口函数：由于js的优先级很高，与css配合使用时往往都是先运行js函数，所以这里就有必要加入一个入口函数，使js函数在css运行加载完之后再运行js函数
	<script>     #这个在导入的时候就使用了，独立开的文件不用
		window.onload = function () {
          var oDiv=document.getElementById('div1');
		  var aCh=oDiv.getElementsByTagName('input');
		  oBtn1.onclick=function(){                  #为该元素添加一个点击事件
		    for(var i=0;i<aCh,length;i++){}
		      aCh[0].cheched=true;
			};  
		  };
		}
	</script>


css--标签 js--元素  dom--节点/对象：这是一个东西

this：当前发生事件的元素
DOM--document：根据标签id等获取元素(属性.offsetleft)，操作(数量和样式)元素     #获取节点，为各种节点添加事件(.onclick)
BOM--window : 打开/关闭新的浏览器窗口，浏览器大小等

(节点).offsetleft：(节点)属性  
(节点).onclick ：(节点)事件       #触发函数(动作)

事件流/事件冒泡：事件会逐级往父节点传递，使用cancalbubble取消事件冒泡
event事件：事件(鼠标或键盘等)的详细信息
偏移offsetleft：移动，淡入淡出
定时器 setinterval： 相隔一段时间执行一次动作(函数) 
延迟提示框 settimeout：

默认行为：(浏览器右键，键盘输入等)可以自定义 

事件绑定attachevent：将多个函数绑定到一个事件上(例如一个点击事件执行多个函数)
解除绑定detachevent：

事件捕获setcapture：取消其他事件，只执行当前事件
释放捕获releasecapture：

磁性吸附：在一定范围内，直接吸附到边缘

滚动条scroll：控制物体大小，透明度，文字(其实文字是全部显示的，只是超出边界/可视区的看不见/被隐藏了)


ajax：创建ajax对象 -- 创建连接 -- 发送数据 -- 接收返回值    #异步js


#########################################################################################

jQuery：https://www.bilibili.com/video/BV1pt411H7D6?p=2

jQuery就是一个封装的js库：隐式迭代  兼容性强  api名称简单
1.引入jquery文件(引入同时会执行)  2.写一个入口函数(可以多个)  3.找到操作元素(jquery选择器)进行(事件)操作

$ ：1.一个函数，可以传递函数   2.变量标识符
有$是jquery对象，没有是dom对象

入口函数：
      #第一步 html中引入jquery文件
      <script src="http://libs.baidu.com/jquery/2.1.4/jquery.min.js"> </script>
      #第二步 入口函数      
	  $(document).ready(function(){         #jquery入口函数第一种方式
			  alert("hello world!");
      });          
      $(function(){                         #jquery入口函数第二种方式，常用
          function1();                      #在下面定义
		  function1();
		  ...
      })
     


dom对象和jquery对象：不能直接相互调用属性和方法，需要通过 $（有$是jquery对象，没有是dom对象 ）   

选择器：text()  css()  基本选择器   层次选择器(父子节点等)   过滤选择器

事件
  例子：
$(function(){                         
  $("#hide").click(function(){
    $("p").hide();
  });
})  


#########################################################################################


https://www.bilibili.com/video/BV1ox411M7P2?p=42
ajax
创建ajax对象new -- 设置请求行open -- 设置请求头setrequestheader(post发送数据才需要) -- 发送数据send -- 接收返回值onload     
# js中创建代码并异步执行js事件


#########################################################################################

https://www.bilibili.com/video/BV12J411m7MG?p=9
vue : javascript框架

el:"元素"
data:{json}
指令：v-text v-html等  


#########################################################################################

node.js













