
#补全相关的内置变量
#COMP_WORDS: 类型为数组，存放当前命令行中输入的所有单词；    #
#COMP_CWORD: 类型为整数，当前光标下输入的单词位于COMP_WORDS数组中的索引；
#COMPREPLY: 类型为数组，候选的补全结果；
#COMP_WORDBREAKS: 类型为字符串，表示单词之间的分隔符；
#COMP_LINE: 类型为字符串，表示当前的命令行输入

#例子：
#cat>>complete<<EOF
#function _foo()
#{
#     echo -e "\n"
#
#     declare -p COMP_WORDS
#     declare -p COMP_CWORD
#     declare -p COMP_LINE
#     declare -p COMP_WORDBREAKS
#}
#complete -F _foo foo
#EOF
#结果：
#foo b c
#declare -a COMP_WORDS='([0]="foo" [1]="b" [2]="c")'	#命令行数组	
#declare -- COMP_CWORD="2"    							#光标所在索引，可以简单认为补全第几个参数
#declare -- COMP_LINE="foo b c" 						#命令行的输出
#declare -- COMP_WORDBREAKS="	


问题：
    1.获取命令行参数
	  COMP_WORDS
	2.知道命令行当前光标是在第几个参数
	  COMP_CWORD
	3.知道光标处参数是什么
	  COMP_WORDS[COMP_CWORD]
	4.要补全什么
	  compgen -W "${opts}" -- ${cur})
	5.以某种方式绑定
	  complete -F  参数补全脚本名  功能脚本名
	  
补全参数脚本实例：
	_mysqltab()
	{
		local cur prev opts
		COMPREPLY=()
		#获取光标所在地方的单词
		cur="${COMP_WORDS[COMP_CWORD]}"
		#prev="${COMP_WORDS[COMP_CWORD-1]}"
		#一级参数
		opts="help hhh usage version"
		#二级参数
		opts1="e ee eee hh"
	
		if [[ ${COMP_CWORD} == "1" ]] ; then
		    #让参数横向输出
			COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
			return 0
		else
			COMPREPLY=( $(compgen -W "${opts1}" -- ${cur}) )
			return 0
		fi
	}
	complete -F _mysqltab ./mysql.sh
	
再有一个mysql.sh功能脚本就可以了	


