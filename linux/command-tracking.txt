
都是使用ptrace系统调用跟踪调试运行中的进程
如果没有自动挂载proc文件系统的话:mount -t procfs proc /proc

[truss和]strace用来跟踪一个进程的系统调用(内核态)或信号产生的情况（静态库？）
top --> 1  查看cpu是内核态还是用户态负载高和负载高的进程pid
-o  -f  -p  -c  -e  -r(打印出相对时间戳) [-t(输出绝对时间戳) -T输出每个系统调用花费的时间 -tt毫秒] -v 对于某些相关调用，把完整的环境变量，文件stat结构等打出来,-s 当系统调用的某个参数是字符串时，最多输出指定长度的内容，默认是32个字节
strace -cp 24303
starce -rf [-s 1024] -e clone -p 24303
-c      count
-p  	pid
-r      print relative timestamp
-f      follow forks
[pstack(gdb程序调试器)]和ltrace用来跟踪进程调用(用户态)库函数的情况（动态库？）
使用strace输出很少不代表进程很空闲


LSOF：	匹配内容^表示取反 (/path/filename) (+d/+D dir) (-d fd) (-c cmd -c ...) (-u 用户名) (-p PID,PID...) 
		(-i(select IPv[46] files) :port / 协议 / 协议:port/ 协议@url:服务名 / 协议@url:port ) -U(socket) -n(不dns) +/-r(持续) #协议指tcp和udp
	lsof | head
		COMMAND     PID   TID    USER   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME
		删除恢复：
			1.lsof |grep /var/log/messages  
				USER使用COMMAND命令启动服务，进程ip是PID，线程id是TID，在DEVICE对类型TYPE，总大小SIZE，在磁盘上的索引节点NODE的文件NAME使用FD(文件描述符+操作方式)操作
			2.cat /proc/PID/fd/FD  >  <filename>

TCPDUMP:  or/and/not
	tcpdump -D | less [类型：host，net，port，portrange  方向：src，dst  协议：tcp，udp，IP，vlan，arp... 多条件组合：and，or，not]
	tcpdump or/and/not 
			-i 接口/any		-c 抓包总数		-t/ttt(不显示时间戳)	-vv(详细输出)	-nn(不dns)
	        [-p] 协议
			src/dst port/portrange PORT		src/dst host ip/域名/网络位	  
			-w 文件		-r 指定文件读出	#可以用'(条件)'形成复合条件,高级过滤方式proxy[x:y]...	
  tcpdump  -c 100 -t -v -n -i any '(((dst host 104.193.88.77) or (dst host 104.193.88.123)) and (tcp[tcpflags] & (tcp-ack|tcp-fin|tcp-syn) !=0))'



ldd CMD:命令调用的库函数
ldconfig：加载动态库


