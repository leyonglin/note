

隐藏服务器版本：
    mv /etc/issue /etc/system.bak
    mv /etc/issue.net /etc/system.netbak
远程登陆优化
        sed -i '38a PermitRootLogin no ' /etc/ssh/sshd_config
        sed -i '38a UseDNS no ' /etc/ssh/sshd_config
        sed -i '38a MaxAuthTries 3' /etc/ssh/sshd_config
添加自定义用户并设置密码/自定义目录
下载：基础依赖包，数据库备份包，常用包，提供服务包
防火墙：建立黑白名单，关闭多余的端口，禁ping
服务降权，自定义服务配置路径，防火墙黑白名单，密码复杂度，版本隐藏，禁root登陆
优化环境：
	export TMOUT=600 终端退出时间  


安全
firewalld
/etc/hosts.deny
/etc/sudoers  
/etc/ssh/sshd_config
/etc/issue、/etc/issue.net 来控制本地及远程登录前的信息显示
/etc/motd    登陆后的信息显示

linux下设置密码复杂度限制:
/etc/login.defs        /etc/pam.d/system-auth

敏感文件/命令MD5值校验：ls ps curl wget last w  /  conf  cron fstab

创建账户：
	Linux 主机并不会直接认识你的『账号名称』的，他仅认识 ID 啊 (ID 就是一组号码啦)
	账号配置文件：
		/etc/passwd:   账号名称:口令(shadow):uid:gid：用户信息说明:家目录:shell
		/etc/shadow:   账号名称:口令:最近更新密码日期:不可被更改日期:有效期:提前几天警告:宽限时间:失效日期:保留(口令栏以!说明账号被冻结了)
		/etc/group:    组名:群组口令:gid:组成员(包括有效群组(effective group)与初始群组(initial group))
			可用 groups 命令查看   可用newgrp group_name 切换有效组(创建文件时显示的组)
		/etc/gshadow   账户:口令栏:群组管理员账号:群组所属账号
	
	创建用户：useradd -D  （配置文件：/etc/default/useradd）
		GROUP=100		<==默认的群组 (某些系统是公共群组机制，centos是私有群组机制，即每个账号都有相应同名组，可忽略) 
		HOME=/home		<==默认的家目录所在目录
		INACTIVE=-1		<==口令失效日，在 shadow 内的第 7 栏
		EXPIRE=			<==账号失效日，在 shadow 内的第 8 栏
		SHELL=/bin/bash		<==默认的 shell
		SKEL=/etc/skel		<==用户家目录的内容数据参考目录（新建用户的家目录下的配置文件时从这里拷贝的）
		CREATE_MAIL_SPOOL=yes   <==是否主动帮使用者创建邮件信箱(mailbox)
	/etc/login.defs（新建账号相关信息） 
	/etc/pam.d/*   （验证模块）
	
	gpasswd：群组管理员功能  
		groupadd testgroup
		gpasswd testgroup
		gpasswd -A vbird1 testgroup
		gpasswd -a vbird1 testgroup
	命令：useradd passwd   [chage -d 强制修改密码]   usermod  userdel   id   groupadd   groupmod  gpasswd  groupdel groups newgrp finger chsh chfn
		pwck：查看用户与对应的家目录是否存在
	
	可以创建（/etc/nologin.txt）这个文件， 并且在这个文件内说明不能登陆/sbin/nologin的原因
	
	PAM 是一个独立的 API 存在，只要任何程序有需求时，可以向 PAM 发出验证要求的通知， PAM 经过一连串的验证后，将验证的结果回报给该程序
		用户开始运行 /usr/bin/passwd 这支程序，并输入口令；
		passwd 呼叫 PAM 模块进行验证；
		PAM 模块会到 /etc/pam.d/ 找寻与程序 (passwd) 同名的配置文件；
		依据 /etc/pam.d/passwd 内的配置，引用相关的 PAM 模块逐步进行验证分析；
		将验证结果 (成功、失败以及其他信息) 回传给 passwd 这支程序；
		passwd 这支程序会根据 PAM 回传的结果决定下一个动作 (重新输入新口令或者通过验证！)
	
	/etc/security/limits.conf  ---> ulimit -a
		@pro1   hard   maxlogins   1     #限制只能开一个终端

登陆：	
	取得 bash 时需要完整的登陆流程的，就称为 login shell(输入用户名密码shell才启动)，non-login shell，不需要登录就可以获取bash页面
	1./etc/profile (#login shell 才会读)   #全局配置
		调用/etc/profile.d/*.sh
		    /etc/inputrc  用来处理键盘映射表（自定义热键~/.inputrc）  
	  ~/.bash_profile   ~/.bash_login    ~/.profile	#个人配置，按顺序只会读取上面三个文件的其中一个
		调用：~.bashrc(#non-login shell 会读) ---> 调用 /etc/bashrc 及 /etc/profile.d/*.sh（包括终端显示）
	2.~/.bash_logout     #退出 
	3.~/.bash_history    #历史记录

同一账号同时多次登陆的 history 写入问题（一般在内存中，最后一个才会被记录）
  不会配置也可以删了，泄露信息
	/etc/motd					   #登陆成功显示的信息
	/etc/issue 和 /etc/issue.net   #登陆bash时候的显示信息
		\d 本地端时间的日期；
		\l 显示第几个终端机接口；
		\m 显示硬件的等级 (i386/i486/i586/i686...)；
		\n 显示主机的网络名称；
		\o 显示 domain name；
		\r 操作系统的版本 (相当于 uname -r)
		\t 显示本地端时间的时间；
		\s 操作系统的名称；
		\v 操作系统的版本。

chmod chown
umask
setfacl -m u:myuser1:rx /srv/projecta   （添加-n表示不重新计算mask，不然mask会被修改）
setfacl -m d:u:myuser1:rx /srv/projecta （继承）
setfacl -m mask::r-- /srv/projecta（设置mask，即最大权限值，这个和组是保持一致的）
getfacl:
	mask:使用者或群组所配置的权限必须要存在于(不能超过) mask 的权限配置范围内才会生效，即实际生效的是#effective:r--
chattr
	A  ：当配置了 A 这个属性时，若你有存取此文件(或目录)时，他的存取时间 atime将不会被修改，可避免I/O较慢的机器过度的存取磁碟。这对速度较慢的计算机有帮助
	S  ：一般文件是非同步写入磁碟的，如果加上 S 这个属性时，当你进行任何文件的修改，该更动会『同步』写入磁碟中。
	a  ：当配置 a 之后，这个文件将只能添加数据，而不能删除也不能修改数据，只有root 才能配置这个属性。 
	c  ：这个属性配置之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩，但是在储存的时候，将会先进行压缩后再储存(看来对於大文件似乎蛮有用的！)
	d  ：当 dump 程序被运行的时候，配置 d 属性将可使该文件(或目录)不会被 dump 备份
	i  ：这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、配置连结也无法写入或新增数据！』对於系统安全性有相当大的助益！只有 root 能配置此属性
	s  ：当文件配置了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间，所以如果误删了，完全无法救回来了喔！
	u  ：与 s 相反的，当使用 u 来配置文件时，如果该文件被删除了，则数据内容其实还存在磁碟中，可以使用来救援该文件喔！

SUID 权限仅对二进位程序(binary program)有效；运行者对於该程序需要具有 x 的可运行权限；运行者将具有该程序拥有者 (owner) 的权限。(passwd)
sgid 使得在该目录内创建的文件/目录，不属于创建者所属的组，而是属于父目录所属的组(所有者还是创建者) 常用于共享
SBIT 目录中的所有文件只能由其所有者删除或移动

cd 等变换工作目录的命令,目录所需权限：使用者对这个目录至少需要具有 x 的权限,如果使用者想要在这个目录内利用 ls 查阅档名，则使用者对此目录还需要 r 的权限。 
可执行的命令,使用者对这个目录至少需要具有 x 权限；使用者对文件至少需要具有 r 的权限才行！（进去读）
编辑文件，使用者在该文件所在的目录至少要有 x 权限；使用者对该文件至少要有 r, w 权限
创建一个文件,使用者在该目录要具有 w,x 的权限，重点在 w 啦！
 


cat <<eof>>test
HISTSIZE=1000
HISTIGNORE=”pwd:ls:ls -ltr:”
HISTTIMEFORMAT="%F %T "
HISTCONTROL = ignorespace              #第一个字符为空格的时候，不会被记录到history
HISTCONTROL=ignoredups				   #过滤相邻相同命令
eof					  
history -c       #临时清理history（包括家目录下的history）
history -d num #删除指定history




