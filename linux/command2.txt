

		
top(1/2/3)free/df/vmstat/iostat/iotop/nethogs
ps命令：1.ps -uroot  2.ps -ef  3.ps -C 命令或进程名   4.ps -l(后台非进程) 5.ps aux 内存/cpu中的程序
        6.ps L （例如：ps -o pid,ppid）  7.O或-O  增加pid、state、tname、time和command字段  使用w或-w选项，就会将完整的进程命令信息显示，多出的部分换行显示


NC：
服务端         						客户端(-u:udp -v:版本/连接信息  -z:不发送数据  -w:超时时间)
nc -lv 9999 (tcp)					nc -vzw 2 192.168.3.6 9999（telnet 192.168.3.6 9999 / nmap 192.168.3.6 -p 9999）
nc -ul 9999(udp)					nc -uvzw 2 192.168.3.6 9998
									nmap -sU 192.168.3.6 -p 9998 -Pn    （-sU扫描udp端口，-Pn防止部分防火墙影响）
nc -lv 9995 > clent.txt(接收端)     nc -vzw 2 192.168.3.21 9995 < nc.txt(发送端)    --- 传文件
可以传目录
nc -l 9991 >/dev/null				nc 192.168.3.21 9991 </dev/zero  +  dstat  ---  测网速


0 - stdin 代表标准输入。1 - stdout 代表标准输出。 2 - stderr 代表标准错误输出
当>&后面接文件时，表示将标准输出和标准错误输出重定向至文件。当>&后面接文件描述符时，表示将前面的文件描述符重定向至后面的文件描述符
cat notexistfile 2>1，会将1看作是一个文件，
cat notexistfile 2>&1,将标准错误输出输出到1这个文件里而不是标准输出,而&的作用就是为了区分文件和文件描述符,亦称“取地址符号”


netstat -lanp[t/u]  #查看网络连接
iostat -x :util%：表示io等待占比，正常情况下该值和磁盘读写（r/w）成正比，如果该值很大，读写数值很小则说明磁盘存在问题，系统性能会受影响	


              nc -l 1567 | tee test              nc 172.31.100.7 1567     
              nc -l 1567 < file.txt              nc -n 172.31.100.7 1567 > file.txt
	tar -cvf – dir_name| bzip2 -z | nc -l 1567   nc -n 172.31.100.7 1567 | bzip2 -d |tar -xvf -
	nc localhost 1567 | mcrypt –flush –bare -F -q -d -m ecb > file.txt    mcrypt –flush –bare -F -q -m ecb < file.txt | nc -l 1567	
	
	
cpu:top/lscpu	  top -H -p PID 查看进程下的线程 
	
	
ps -aux 的STAT
	S等待态(可中断)  D等待态(不可中断)  T等待态(暂停状态/后台挂起)  R运行态(包含就绪态)  Z僵尸进程
	<高优先级进程  N优先级较低  l有子进程  s会话组组长(一组会话组)  +前台进程(当前终端运行，可直接运行的进程)
ps -ajx/ef  查看父进程	
	进程优先级NI：决定一个进程的执行权限和占有资源的优先程度
		指定优先级运行程序命令：nice  -n  进程   (n取值：-20~19)
	
进程间通信方法：
	1.管道通信(pipe):
		通信原理： 在内存中开辟管道空间，生成管道操作对象，多个进程使用"同一个"管道对象进行操作即可实现通信(父进程创建，子进程继承)   
	2.消息队列(Queue)：先进先出
		通信原理：在内存中建立队列数据结构模型，多个进程都可以通过队列存入内容，取出内容的顺序和存入顺序保持一致
	3.共享内存(Shared memory)：
		通信原理：在内存中开辟一块空间，对多个进程可见，进程可以写入输出，但是每次写入的内容会覆盖之前的内容
	4.信号通信(内核发出的)：信号通信中唯一一种异步通信方法
		一个进程向另一个进程发送一个信号来传递某种讯息，接受者根据收到的信号进行相应的行为
			kill -l   查看系统信号
			sighup:终端关闭    sigint:ctrl-C终止   sigquit:ctrl-\终止    sigill/sigfpe:执行指令/算术运算错误终止  sigalrm:时钟信号
			sigkill:立即结束   sigstop:暂停       sigtstp:ctrl-z暂停    sigchld:子进程改变状态发信号给父进程   sigabort:结束进程     
	5.信号量:   
	6.套接字：本地套接字		
	

	
cal --help 显示时间	

终端会话录制：-q 静默模式  -t记录时间  -a追加  -c记录命令输出
  1.
	script -t 2>demo.time -a demo.his 　　　　　　　　　　 开始录像
		CMD                                                ctrl+d或者exit结束,会被记录
	scriptreplay demo.time demo.his　　　　　　　　　　　　回放
  2.
	script scp.log -c "cp -vf /root/anaconda-ks.cfg /opt/"   实际执行，记录该命令输出 
	
multitail：
	同时监控两个文件：multitail log1 log2
	分成两列监控两个文件：multitail -s 2 log1 log2
	分成两列监控，第一列3个，第二列2个： multitail -s 2 -sn 3,2	 log1 log2 log3 log4 log5
	
	