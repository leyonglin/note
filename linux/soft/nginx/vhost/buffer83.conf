#proxy_buffering on;
proxy_connect_timeout 5;
proxy_read_timeout 60;
proxy_send_timeout 5;
proxy_buffer_size 16k;
proxy_buffers 4 64k;
proxy_busy_buffers_size 128k;
proxy_temp_file_write_size 128k;
proxy_temp_path /tmp/temp_cache1; #临时缓存目录
proxy_cache_path /tmp/cache1 levels=1:2 keys_zone=cache_one:200m inactive=30d max_size=5g;
server {
    listen 83;
    server_name localhost;
    
    #缓存清理模块
    location ~ /purge(/.*) {
        allow 127.0.0.1;
        allow 192.168.3.0/24; #此处表示允许访问缓存清理页面的IP
        deny all;
        proxy_cache_purge cache_one $host$1$is_args$args;
    }
    
   
    #动态页面直接放过不缓存
    #location ~ .*\.(php)(.*){
    #    proxy_pass http://127.0.0.1:8080;
    #    proxy_set_header        Host $host;
    #    proxy_set_header        X-Real-IP $remote_addr;
    #    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    #}
    
    #缓存以斜杠结尾的页面，类似于CDN的目录缓存，如果存在问题请取消缓存机制
    #location ~ ^(.*)/$ {
    #    proxy_pass http://127.0.0.1:8080;
    #    proxy_redirect off;
    #    proxy_cache_key $host$uri$is_args$args;
    #    proxy_set_header Host $host;
    #    proxy_cache cache_one;
    #    proxy_cache_valid 200 302 1d;
    #    proxy_cache_valid 301 1d;
    #    proxy_cache_valid any 1m;
    #    expires 1h;
    #    proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
    #    add_header Nginx-Cache "$upstream_cache_status";
    #}
    #
    location /jenkins {
        proxy_pass http://127.0.0.1:8080/jenkins;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache cache_one;
        proxy_cache_valid 200 302 1d;
        proxy_cache_valid 301 2d;
        proxy_cache_valid any 1m;
        #浏览器过期时间设置4小时
        expires 4h;
        #忽略头部禁止缓存申明，类似与CDN的强制缓存功能
        proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
        #在header中插入缓存状态，命中缓存为HIT，没命中则为MISS
        add_header udNginx-Cache "$upstream_cache_status";
        #proxy_set_header        Host $host;
        #proxy_set_header        X-Real-IP $remote_addr;
        #proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ~ (.*\.html$) {
        proxy_pass http://127.0.0.1:80/$1;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache cache_one;
        proxy_cache_valid 200 302 1d;
        proxy_cache_valid 301 2d;
        proxy_cache_valid any 1m;
        #浏览器过期时间设置4小时
        expires 4h;
        #忽略头部禁止缓存申明，类似与CDN的强制缓存功能
        proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
        #在header中插入缓存状态，命中缓存为HIT，没命中则为MISS
        add_header udNginx-Cache "$upstream_cache_status";
    }
    #缓存html页面，可以缓存伪静态【这是亮点！】
    location ~ (.*) {
        proxy_pass http://127.0.0.1:8080/$1;
        proxy_cache_key $host$uri$is_args$args;
        proxy_cache cache_one;
        proxy_cache_valid 200 302 1d;
        proxy_cache_valid 301 2d;
        proxy_cache_valid any 1m;
        #浏览器过期时间设置4小时
        expires 4h;
        #忽略头部禁止缓存申明，类似与CDN的强制缓存功能
        proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
        #在header中插入缓存状态，命中缓存为HIT，没命中则为MISS
        add_header udNginx-Cache "$upstream_cache_status";
    }
}
