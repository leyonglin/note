
.bat批处理文件   会在cmd命令行中执行并显示执行命令及输出结果
 @echo off       #这条命令代表关闭回显，即不输出命令仅输出结果
 
概念：
 硬件查看工具：cpu-z  

 总线（Bus）是指计算机组件间规范化的交换数据（data）的方式，即以一种通用的方式为各组件提供数据传送和控制逻辑，可同时传输的数据数就称为宽度

 固件（英语：firmware），是一种嵌入在硬件设备中的软件。通常它是位于特殊应用集成电路（ASIC）或可编程逻辑器件（PLD）之中的闪存或EEPROM或PROM里,位于软件和硬件之间的,一个被计算机所运行的程序
 固件的一个一般性的特色是它可以随时以 电流清除并重写 或 更换存储介质 的方式更新。可以（但并非必需）暴露出一个可由外界连接的接口,并非可以直接访问，但却是由硬件以及韧体所组成回应主机的一部分
 新型UEFI，全称“统一的可扩展固件接口”(Unified Extensible Firmware Interface)， 是一种详细描述类型接口的标准。这种接口用于操作系统自动从预启动的操作环境，加载到一种操作系统上。
 可扩展固件接口（Extensible Firmware Interface，EFI）是 Intel 为 PC 固件的体系结构、接口和服务提出的建议标准。其主要目的是为了提供一组在 OS 加载之前（启动前）在所有平台上一致的、正确指定的启动服务
 固件(Firmware)就是写入EPROM（可擦写可编程只读存储器）或EEPROM(电可擦可编程只读存储器)中的程序

 驱动程序一般指的是设备驱动程序（Device Driver）全称为“设备驱动程序”，是一种可以使计算机和设备进行相互通信的特殊程序，是即添加到操作系统中的一小块代码。相当于硬件的接口(有些硬件不需要)，操作系统只有通过这个接口，才能控制硬件设备的工作，用来将硬件本身的功能告诉操作系统，完成硬件设备电子信号与操作系统及软件的高级编程语言之间的互相翻译
 驱动程序包通常由一些。vxd（或.386）、.drv、.sys、.dll或.exe等文件组成，大多数的驱动程序（device drivers）运行在内核模式（kernel mode），安装顺序：主板芯片组（Chipset）→显卡（VGA）→声卡（Audio）→网卡（LAN）→无线网卡（Wireless LAN）→红外线（IR）→触控板（Touchpad）→PCMCIA控制器（PCMCIA）→读卡器(Flash Media Reader)→调制解调器（Modem）→其它（如电视卡、CDMA上网适配器等等）
 安装操作系统----操作系统的Service Pack（SP）补丁(解决了操作系统的兼容性问题)---安装主板驱动{---AGP补丁(显卡补丁)}---安装DirectX驱动---显卡、声卡、网卡、调制解调器等插在主板上的板卡类驱动---打印机、扫描仪、读写机这些外设驱动
 DirectX是微软嵌在操作系统上的应用程序接口（API），DirectX由显示部分、声音部分、输入部分和网络部分四大部分组成，显示部分又分为Direct Draw（负责2D加速）和Direct 3D（负责3D加速）
 CPU的两个运行级别。一个被称为内核模式，是操作系统的核心部分，设备驱动程序就是运行在该模式下；另一个被称为用户模式，操作系统的用户接口部分（就是我们通常所说的win32 API）以及所有的用户应用程序都运行在该级别。
 正式版(公版驱动)，WHQL(认证版)，第三方(驱动人生6/鲁大师/360/驱动精灵)，修改版驱动(改版驱动)，测试版驱动(测试阶段)
 控制面板-----程序和功能-----卸载删除显卡驱动，并且卸载删除近期安装的补丁或第三方软件程序

 驱动和固件（firmware）都是代码，前者为软件服务，后者为硬件服务。
 固件是硬件厂商在硬件之上做一些封装，让自己的硬件操纵起来更容易，但为了兼容各种操作系统，又不能把firmware写的太死，必须预留足够的余地让软件自由发挥——软件的自由发挥就是驱动。
 Linux Kernel中，Driver和Firmware是有明确含义的，其中Driver是控制被操作系统管理的外部设备（Device）的代码段，很多时候Driver会被实现为LKM，driver通过register_dirver()注册到总线(bus_type）上，当某个device被注册到同样的总线的时候，driver和device会通过一定的策略进行binding，最终在probe()函数中由driver实际控制对应的设备，并把对该设备的控制接口注册到Linux的其他子系统上
 LKM是Linux内核为了扩展其功能所使用的可加载内核模块。LKM的优点：动态加载，无须重新实现整个内核。基于此特性，LKM常被用作特殊设备的驱动程序（或文件系统），如声卡的驱动程序等等。
 Firmware，是表示运行在非“控制处理器”指不直接运行操作系统的处理器，这些程序很多时候使用和操作系统所运行的处理器完全不同的指令集。这些程序以二进制形式存在于Linux内核的源代码树中，根据配置，可以直接集成到最终的映像中，或者被拷贝到指定的位置。当driver对device进行初始化的时候，通过load_firmware()等接口，可以把指定的firmware加载到内存中，由驱动传输到指定的设备上。
 
 微处理器（Microprocessor，缩写：µP或uP）是可编程特殊集成电路(cpu,gpu,apu..)一种处理器，制程进入微米的制造，强调高科技(4,8,16,32,64位,RISC（精简指令集计算机）)，其所有组件小型化至一块或数块集成电路内。一种集成电路，可在其一端或多端接受编码指令，执行此指令并输出描述其状态的信号。这些指令能在内部输入、集中或存放起来。又称半导体中央处理器，是微型计算机的一个主要部件
 CPU结构只能在同一时间点执行一个指令，这种类型的CPU被称为低标量。短板效应
 cpu：处理数据的频率就是主频，与外界联系的频率就是外频(基频)，主频/外频=倍频   睿频：动态调整   超频：用户强制CPU所有内核运行比额定频率高的频率上
 主频不等于处理器一秒钟执行的指令条数，因为一条指令的执行可能需要多个时钟周期
 指令平行处理（Instruction Level Parallelism, ILP）以增加CPU执行指令的速率（换句话说，增加on-die执行资源的利用），以及执行绪平行处理（Thread Level Parallelism, TLP）目的在增加执行绪（有效的个别程序）使得CPU可以同时执行。每种方法均可由其如何嵌入或相对有效（对CPU的性能）来区分。[parallelperformance]
 指令级并发（Instruction level parallelism，ILP）：指令管线化与超标量架构   //    线程级并发（Thread-level parallelism，TLP）：同时执行绪执行或线程级并行处理   //   数据并行   //  多核心中央处理器是在中央处理器芯片或封装中包含多个处理器核心，以偶数为核心数目较为常见，一般共享二级缓存。
 ips：CPU的性能和速度取决于时钟频率（一般以赫兹或千兆赫兹计算，即hz与Ghz）和每周期可处理的指令（IPC），两者合并起来就是每秒可处理的指令（IPS）
 基准:工程师便用各种已标准化的测试去测试CPU的性能，已标准化的测试通常被称为“基准”

 芯片组，作为中央处理器跟系统内其他组件两者间的联系工具，通常是特指计算机主板上的南桥/北桥芯片,是决定主板级别的重要部件

 内存RAM(Random Access Memory)；也叫主存：随机存取存储器，与cpu直接交换数据的内部存储器，存储正在运行的操作系统（指的是操作系统的核心）以及所有正在运行的程序（应用程序的部分，使用中央处理器或I/O通道，或是在等待中央处理器或I/O通道）。
 “随机存取”，指的是当存储器中的消息被读取或写入时，所需要的时间与这段信息所在的位置无关。相对地，有串行访问存储器包括顺序访问存储器（如：磁带）和直接访问存储器（如：磁盘）。
 ROM：唯读记忆体（Read-Only Memory）是一种半导体记忆体，其特性是一旦储存资料就无法再将之改变或删除，且内容不会因为电源关闭而消失
 用户进程使用的物理内存，即工作集(Working set)
 EEPROM，或写作E2PROM，全称电可擦除可编程只读存储器 （Electrically-Erasable Programmable Read-Only Memory），是一种可以通过电子方式多次复写的半导体存储设备。相比EPROM，EEPROM不需要用紫外线照射，也不需取下，就可以用特定的电压，来抹除芯片上的信息，以便写入新的数据。
 EEPROM有四种工作模式：读取模式、写入模式、擦除模式、校验模式。
 
 DRAM 动态随机存取存储器（Dynamic Random Access Memory）是一种半导体存储器，主要的作用原理是利用电容内存储电荷的多寡来代表一个二进制比特（bit）是1还是0。由于在现实中晶体管会有漏电电流的现象，导致电容上所存储的电荷数量并不足以正确的判别数据，而导致数据毁损。因此对于DRAM来说，周期性地充电是一个无可避免的要件。由于这种需要定时刷新的特性，因此被称为“动态”存储器。
 SRAM 静态存储器只要存入数据后，纵使不刷新也不会丢失记忆。
 动态随机存取存储器（DRAM）：随机存取   易失性，较高访问速度(相对静态存储器(SRAM)慢)，需要刷新，对静电敏感
 同步动态随机存取內存（synchronous dynamic random-access memory，简称SDRAM）是有一个同步接口的动态随机存取內存（DRAM）。通常DRAM是有一个异步接口的，这样它可以随时响应控制输入的变化。而SDRAM有一个同步接口，在响应控制输入前会等待一个时钟信号，这样就能和计算机的系统总线同步。时钟被用来驱动一个有限状态机，对进入的指令进行管线(Pipeline)操作。这使得SDRAM与没有同步接口的异步DRAM(asynchronous DRAM)相比，可以有一个更复杂的操作模式。
 SDRAM在计算机中被广泛使用，从起初的SDRAM到之后一代的DDR
 管线意味着芯片可以在处理完之前的指令前，接受一个新的指令。在一个写入的管线中，写入命令在另一个指令执行完之后可以立刻执行，而不需要等待数据写入存储队列的时间。在一个读取的流水线中，需要的数据在读取指令发出之后固定数量的时钟频率后到达，而这个等待的过程可以发出其它附加指令。这种延迟被称为等待时间(Latency)，在为计算机购买內存时是一个很重要的参数。
 管线，亦称流水线，是现代计算机处理器中必不可少的部分，是指将计算机指令处理过程拆分为多个步骤，并通过多个硬件处理单元并行执行来加快指令执行速度
 有限状态机（英语：finite-state machine，缩写：FSM）又称有限状态自动机，简称状态机，是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型。FSM可以把模型的多状态、多状态间的转换条件解耦(将转换条件单独作为一个类)。可以使维护变得容易，代码也更加具有可读性，也更加艺术。

 BIOS（Basic Input/Output System，中文：基本输入输出系统，亦称为ROM BIOS、System BIOS、PC BIOS）是在通电引导阶段运行硬件初始化，以及为操作系统和程序提供运行时服务的固件
 早年，BIOS存储于ROM芯片上；现在的BIOS多存储于闪存芯片上，支持更新
 为了避免BIOS损坏，有些主板有备份的BIOS（“双BIOS”主板）。现在的BIOS有“引导区块”（Boot Block），属于BIOS ROM的一部分，一引导就会被运行。这个程序会在运行BIOS前，验证BIOS其他部分是否正确无误（经由检查码，凑杂码等等）。如果引导区块侦测到主要的BIOS已损坏，则可自动读取U盘/光盘中的特定BIOS文件并更新BIOS。主板厂商/OEM经常发出BIOS升级来更新他们的产品和修正已知的问题。
 CMOS芯片是一种低耗电存储器，其主要作用是用来存放BIOS中的设置信息以及系统时间日期。BIOS是存储在唯读记忆体（EEPROM），而CMOS为随机存储器（RAM）；BIOS中存储的是程序，而CMOS中存储的是普通信息。
 
 CISC复杂指令集（英文：Complex Instruction Set Computing）是一种微处理器指令集架构，每个指令可执行若干低级操作
 精简指令集（RISC）
 微指令（microcode），又称微码，是在CISC结构下，运行一些功能复杂的指令时，所分解一系列相对简单的指令。相关的概念最早在1947年开始出现。
 微指令作用是将机器指令与相关的电路实现分离，这样一来机器指令可以更自由的进行设计与修改，而不用考虑到实际的电路架构。与其他方式比较起来，使用微指令架构可以在降低电路复杂度的同时，建构出复杂的多步骤机器指令。撰写微指令一般称为微程序设计（microprogramming），而特定架构下的处理器实做中微指令有时会称为微程序（microprogram）。
 微指令：通常由CPU工程师在设计阶段编写，并且存储在只读存储器（ROM, read-only-memory）或可编程逻辑数组（PLA, programmable logic array）中

 总线（Bus）是计算机各种功能部件之间传送信息的公共通信干线，是由导线组成的传输线束
 PCIe:PCI-Express(peripheral component interconnect express)是一种高速串行计算机扩展总线标准,属于高速串行点对点双通道高带宽传输，所连接的设备分配独享通道带宽，不共享总线带宽
 扩展卡:如声卡、网卡、显卡等设备。这些设备可能通过PCIe（早年还有PCI、AGP等接口）等总线连接到系统上，也可能是集成到主板上的设备（GPU可能被集成到CPU或芯片组上）。
 

CPU：
 1、主频，主频也叫时钟频率，单位是MHz(或GHz)，用来表示CPU的运算、处理数据的速度。CPU的主频=外频×倍频系数。很多人认为主频就决定着CPU的运行速度，这不仅是个片面的，而且对于服务器来讲，这个认识也出现了偏差。至今，没有一条确定的公式能够实现主频和实际的运算速度两者之间的数值关系，即使是两大处理器厂家Intel英特尔和AMD，在这点上也存在着很大的争议，从Intel的产品的发展趋势，可以看出Intel很注重加强自身主频的发展。像其他的处理器厂家，有人曾经拿过一块1G的全美达处理器来做比较，运行效率相当于2G的Intel处理器。
 2、外频，外频是CPU的基准频率，单位是MHz。CPU的外频决定着整块主板的运行速度。通俗地说，在台式机中，所说的超频，都是超CPU的外频(当然一般情况下，CPU的倍频都是被锁住的)相信这点是很好理解的。但对于服务器CPU来讲，超频是绝对不允许的。前面说到CPU决定着主板的运行速度，两者是同步运行的，如果把服务器CPU超频了，改变了外频，会产生异步运行，(台式机很多主板都支持异步运行)这样会造成整个服务器系统的不稳定。
 3、前端总线(FSB)频率，前端总线(FSB)频率(即总线频率)是直接影响CPU与内存直接数据交换速度。有一条公式可以计算，即数据带宽=(总线频率×数据位宽)/8，数据传输最大带宽取决于所有同时传输的数据的宽度和传输频率。比方，现在的支持64位的至强Nocona，前端总线是800MHz，按照公式，它的数据传输最大带宽是6.4GB/秒。
 4、CPU的位和字长，位：在数字电路和电脑技术中采用二进制，代码有“0”和“1”，其中无论是“0”或是“1”在CPU中都是一“位”。
 5、倍频系数，倍频系数是指CPU主频与外频之间的相对比例关系。在相同的外频下，倍频越高CPU的频率也越高。但实际上，在相同外频的前提下，高倍频的CPU本身意义并不大。这是因为CPU与系统之间数据传输速度是有限的，一味追求高倍频而得到高主频的CPU就会出现明显的“瓶颈”效应―CPU从系统中得到数据的极限速度不能够满足CPU运算的速度。一般除了工程样版的Intel的CPU都是锁了倍频的，少量的如Inter酷睿2核心的奔腾双核E6500K和一些至尊版的CPU不锁倍频，而AMD之前都没有锁，现在AMD推出了黑盒版CPU(即不锁倍频版本，用户可以自由调节倍频，调节倍频的超频方式比调节外频稳定得多)。
 
 CPU在芯片设计上，绝大部分空间其实并不属于ALU(算数逻辑单元）。CPU作为通用处理器，除了满足计算要求，为了更好的响应人机交互的应用，以及任务之间的同步协调，所以芯片上需要很多空间来实现分支预测与优化(control), 保存各种状态(cache)以降低任务切换时的延时。
 GPU则走了一个极端，它在芯片设计上突出计算输出最大化，几乎将所有的空间都给了ALU，所以对于AI，HPC，图形渲染这样简单粗暴的浮点矩阵运算，GPU的优势肯定就非常明显了。
 推土机（Bulldozer）是AMD的微处理器架构


操作系统：操作系统是cpu上电后运行的第一个程序，cpu设计的时候定义启动后加载的第一个程序可以拿到超级权限。因此，可以理解为操作系统是硬件资源的管理员程序。其他用户程序如果想使用cpu资源，都需要经过操作系统内核统一分配调度。

内核：
 操作系统是一个用来和硬件打交道并为用户程序提供一个有限服务集的低级支撑软件。
 内核指的是进行的是应用软件和计算机硬件的交互工作，是一个提供硬件抽象层、磁盘及文件系统控制、多任务等功能的系统软件。内核是一个操作系统的核心(但非必须)，是操作系统最基本的部分。
 它负责管理系统的内存管理，进程调度，进程间通信，虚拟文件系统，网络接口等，决定着系统的性能和稳定性。
 它是为众多应用程序提供对计算机硬件的安全访问的一部分软件，这种访问是有限的，并且内核决定一个程序在什么时候对某部分硬件操作多长时间。直接对硬件操作是非常复杂的，所以内核通常提供一种硬件抽象的方法来完成这些操作。硬件抽象隐藏了复杂性，为应用软件和硬件提供了一套简洁，统一的接口，使程序设计更为简单。
 内核，是一个操作系统的核心。是基于硬件的第一层软件扩充，提供操作系统的最基本的功能，是操作系统工作的基础。
 为减少系统本身的开销，往往将一些与硬件紧密相关的（如中断处理程序、设备驱动程序等）、基本的、公共的、运行频率较高的模块（如时钟管理、进程调度等）以及关键性数据结构独立开来，使之常驻内存，并对他们进行保护。通常把这一部分称之为操作系统的内核

操作系统都是采用虚拟存储器，那么对32位操作系统而言，它的寻址空间（虚拟存储空间）为4G（2的32次方）。操作系统的核心是内核，独立于普通的应用程序，可以访问受保护的内存空间，也有访问底层硬件设备的所有权限。为了保证用户进程不能直接操作内核（kernel），保证内核的安全，操心系统将虚拟空间划分为两部分，一部分为内核空间，一部分为用户空间。针对linux操作系统而言，将最高的1G字节（从虚拟地址0xC0000000到0xFFFFFFFF），供内核使用，称为内核空间，而将较低的3G字节（从虚拟地址0x00000000到0xBFFFFFFF），供各个进程使用，称为用户空间


在用户变量添加路径(安装包位置)  系统变量(添加%HOME%\bin)

冯·诺伊曼结构（英语：Von Neumann architecture），也称冯·诺伊曼模型（Von Neumann model）或普林斯顿结构（Princeton architecture），是一种将程序指令存储器和数据存储器合并在一起的计算机设计概念结构
 存储程序计算机在体系结构上主要特点有：
 1.以运算单元为中心
 2.采用存储程序原理
 3.存储器是按地址访问、线性编址的空间
 4.控制流由指令流产生
 5.指令由操作码和地址码组成
 6.数据以二进制编码
 冯·诺伊曼CPU的运作原理可分为四个阶段：提取、解码、执行和写回。
 
调制解调器，是调制器和解调器的缩写 ，一种计算机硬件 [1]  ，它能把计算机的数字信号翻译成可沿普通电话线传送的模拟信号，而这些模拟信号又可被线路另一端的另一个调制解调器接收，并译成计算机可懂的语言。这一简单过程完成了两台计算机间的通信。 
 
 
wimdows添加命令行命令：
 将应用程序及应用程序拓展(.dll)复制到wimdows的命令路径 C:\Windows\System32 下，同时需要相应的库文件(vcredist_x64(应用程序)：c++库文件)   
 DLL(Dynamic Link Library)文件为动态链接库文件，又称“应用程序拓展”，是软件文件类型
 .exe 可执行文件(应用程序)  .dll应用程序拓展  .acm文件为音频压缩管理驱动程序文件为音频压缩管理驱动程序,主要是为Windows系统提供各种声音格式的编码和解码功能
 .DAT 数据文件(无绝对定义)  .ax是媒体播放的插件文件,用于支持播放某种媒体文件的解码   .bat批处理文件(在cmd界面执行)
 .bin文件是PE光盘镜像文件(二进制文件)。 BIN文件它可以是任何内容,它并不是多见到的doc、jpg、mp3等具有特定程序可以打开的文件
 OCX 是对象类别扩充组件（Object Linking and Embedding (OLE) Control Extension）；是可执行的文件的一种，但不可直接被执行 
 PE文件的全称是Portable Executable，意为可移植的可执行的文件，常见的EXE、DLL、OCX、SYS、COM都是PE文件，PE文件是微软Windows操作系统上的程序文件（可能是间接被执行，如DLL）
 后缀为asp asa asc的文件都是ASP文件Active Server Page（ASP，活动服务器页面）就是一个编程环境，在其中，可以混合使用HTML、脚本语言以及组件来创建服务器端功能强大的Internet应用程序
 CHS，是FDISK在分区期间所需磁盘信息。CHS寻址模式：CHS寻址模式将硬盘划分为磁头（Heads）、柱面(Cylinder)、扇区(Sector)。
 EFI是windowsNT6以上系统里面里的启动文件。用于引导GPT分区,里面都是一些引导信息,系统启动后会读取efi文件,然后获取引导信息今儿加载系统相关文件
 .h为头文件，.c为源文件，其实两者都是代码，头文件用于共享，只用一句#include就能包含，当然.c也可以包含；二是如果你要写库的话，可是你又不想暴露你的源代码，你可以把.c编译成.obj或是.lib发给别人用，然后把.h作为使用说明书。所以一般情况下，.h里面全部都是声明，.c里面全部都是实现，有了.h就可以编译，有了.lib或你的.obj就可以连接
 .iec：音频文件  INI文件被用来对操作系统或特定程序初始化或进行参数设置  .nls是多国语言资源文件、字符转换,文件是额外的中文语言显示支持文件，通常是特殊编码的语言编码集
 .IME 是输入法编辑器(Input Method Editor) 程序配置文件，使用此种输入法，不需特殊的键盘（对应各种语言的键盘）即可输入东亚诸国（如中文、日文、韩文、俄文等）的各种文字
 .ec Informix ESQL/C Source
 .irc Internet Relay Chat Script
 .ies IESNA Photometric Data
 .idc Core IDC Image
 .ief Image Exchange Format Bitmap File
 .eic East India Company Saved Game
 .isc ISP Configuration File
 .iex The Tuttles Madcap Misadventures Data
 .ie MyEclipse Image
 
 
dos命令：
 gpedit.msc
 compmgmt.msc
 
Win10：快捷键
 Win键+D：显示桌面
 Win键+Shift+左/右：将应用从一个显示屏移至另一个显示屏
 Win键+I：打开Windows 10设置
 Win键+X：打开高级用户功能
 Win键+Ctrl+D：创建一个新的虚拟桌面(Win键+Tab可解)
 Win键+Ctrl+左/右：切换虚拟桌面
 Win键+Tab：激活多任务视图
 Win键+E：打开文件管理器
 Win键+L：锁定屏幕
 Win键+R：运行
 Win键+1/2/3：打开任务栏中固定的程序，1代表任务栏中第一个应用图标
 Shift +左/右/上/下:移动光标并选中文本
